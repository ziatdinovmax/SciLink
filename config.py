# config.py
import os
import logging
import json

IMAGE_PATH = "data/MoS2_tem.png"  # <<< SET PATH TO YOUR IMAGE
SYSTEM_INFO_PATH = "data/MoS2_tem.json"  # <<< SET PATH TO ASSOCIATE METADATA

ANALYSIS_AGENT_MODEL = "gemini-2.5-pro-preview-03-25"  # Model for analysis step
GENERATOR_AGENT_MODEL = "gemini-2.5-pro-preview-03-25"  # Model for structure generation step

GENERATOR_ADDITIONAL_INSTRUCTIONS = "Save the structure in POSCAR format."

FFT_NMF_ENABLED = False # Set to False to disable this analysis step
FFT_NMF_AUTO_PARAMS = True # Set to True to use LLM for deciding WINDOW_SIZE, STEP, and COMPONENTS params

# ------------------------------------------

# --- Load system info from JSON ---
with open(SYSTEM_INFO_PATH, 'r') as f:
    SYSTEM_INFO = json.load(f)

# ---GEMINI API KEY ---
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

# --- Paths ---
# Directory for ASE scripts generated by the StructureGenerator
GENERATED_SCRIPT_DIR = "generated_scripts"

# --- Agent Parameters ---
GENERATOR_SCRIPT_TIMEOUT = 180 # Timeout for ASE script execution (seconds)

# --- Logging ---
LOGGING_LEVEL = logging.INFO
LOGGING_FORMAT = '%(asctime)s - %(levelname)s - %(message)s'

# --- OWL Literature Agent Configuration ---
FUTUREHOUSE_API_KEY = os.getenv("FUTUREHOUSE_API_KEY")
OWL_MAX_WAIT_TIME = 400  # Maximum number of retries for checking OWL task status

# --- FFT NMF Configuration ---
FFT_NMF_SETTINGS = {
    'FFT_NMF_ENABLED': FFT_NMF_ENABLED,
    'FFT_NMF_AUTO_PARAMS': FFT_NMF_AUTO_PARAMS,
    'window_size_x': 64,
    'window_size_y': 64,
    'window_step_x': 16,
    'window_step_y': 16,
    'interpolation_factor': 2,
    'zoom_factor': 2,
    'hamming_filter': True,
    'components': 4,
    'output_dir': "fft_nmf_results"
}
